{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","currentSong","isPlaying","setIsPlaying","audioRef","songInfo","setSongInfo","songs","setSongs","setCurrentSong","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","current","play","getTime","time","minutes","Math","floor","seconds","secondsWithZero","String","padStart","skipTrackHandler","direction","a","currentIndex","findIndex","length","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","transform","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","src","cover","alt","name","artist","LibrarySong","songSelectHandler","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","uuidv4","App","useRef","useState","data","timeUpdateHandler","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aee8fb24.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport {\r\n  faPlay,\r\n  faPause,\r\n  faAngleRight,\r\n  faAngleLeft,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  songInfo,\r\n  setSongInfo,\r\n  songs,\r\n  setSongs,\r\n  setCurrentSong,\r\n}) => {\r\n  const activeLibraryHandler = (nextPrev) => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === nextPrev.id) {\r\n        return { ...song, active: true };\r\n      } else {\r\n        return { ...song, active: false };\r\n      }\r\n    });\r\n\r\n    setSongs(newSongs);\r\n    if (isPlaying) {\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n  // Event Handlers\r\n  const playSongHandler = () => {\r\n    // play or pause the current song\r\n\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = Math.floor(time % 60);\r\n    // padStart places 0 from the left of the seconds until the length is 2.\r\n    const secondsWithZero = String(seconds).padStart(2, \"0\");\r\n    return `${minutes}:${secondsWithZero}`;\r\n  };\r\n\r\n  const dragTimeHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip-forward\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direction === \"skip-back\") {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        setCurrentSong(songs[songs.length - 1]);\r\n        activeLibraryHandler(songs[songs.length - 1]);\r\n      } else {\r\n        setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n        activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\r\n      }\r\n    }\r\n    if (isPlaying) {\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            onChange={dragTimeHandler}\r\n            type=\"range\"\r\n          />\r\n          <div\r\n            className=\"animate-track\"\r\n            style={{\r\n              transform: `translateX(${\r\n                (songInfo.currentTime / songInfo.duration) * 100 // animates the track based on current position of the song\r\n              }%)`,\r\n            }}\r\n          ></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-forward\")}\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\nconst Song = ({ currentSong }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img src={currentSong.cover} alt={currentSong.name}></img>\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import React from \"react\";\r\n\r\nconst LibrarySong = ({\r\n  song,\r\n  songs,\r\n  setCurrentSong,\r\n  setSongs,\r\n  id,\r\n  audioRef,\r\n  isPlaying,\r\n}) => {\r\n  // Event Handler\r\n  const songSelectHandler = async () => {\r\n    await setCurrentSong(song);\r\n    // Add active state to current song and false to unactive songs\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return { ...song, active: true };\r\n      } else {\r\n        return { ...song, active: false };\r\n      }\r\n    });\r\n\r\n    setSongs(newSongs);\r\n    if (isPlaying) {\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={songSelectHandler}\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img src={song.cover} alt={song.name}></img>\r\n      <div className=\"song-description\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({\r\n  songs,\r\n  setCurrentSong,\r\n  setSongs,\r\n  audioRef,\r\n  isPlaying,\r\n  libraryStatus,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            song={song}\r\n            songs={songs}\r\n            setCurrentSong={setCurrentSong}\r\n            setSongs={setSongs}\r\n            id={song.id}\r\n            key={song.id}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\r\n  return (\r\n    <nav>\r\n      <h1>Tunes</h1>\r\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    //ADD MORE HERE\r\n  ];\r\n}\r\n\r\nexport default chillHop;\r\n","import React, { useRef, useState } from \"react\";\r\n// import styles\r\nimport \"./styles/app.scss\";\r\n// import components\r\nimport Player from \"./components/Player\";\r\nimport Song from \"./components/Song\";\r\nimport Library from \"./components/Library\";\r\nimport Nav from \"./components/Nav\";\r\n// import data\r\nimport data from \"./data\";\r\n\r\nfunction App() {\r\n  // Ref - used to grab references to DOMs in React.\r\n  const audioRef = useRef(null);\r\n\r\n  // State\r\n  const [songs, setSongs] = useState(data());\r\n  const [currentSong, setCurrentSong] = useState(songs[0]);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [songInfo, setSongInfo] = useState({\r\n    currentTime: 0,\r\n    duration: 0,\r\n  });\r\n\r\n  const [libraryStatus, setLibraryStatus] = useState(false);\r\n\r\n  const timeUpdateHandler = (e) => {\r\n    const current = e.target.currentTime;\r\n    const duration = e.target.duration;\r\n    setSongInfo({ ...songInfo, currentTime: current, duration }); // duration is short for duration: duration\r\n  };\r\n\r\n  const songEndHandler = async () => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n\r\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n\r\n    if (isPlaying) {\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\r\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\r\n      <Song currentSong={currentSong} />\r\n      <Player\r\n        currentSong={currentSong}\r\n        isPlaying={isPlaying}\r\n        setIsPlaying={setIsPlaying}\r\n        audioRef={audioRef}\r\n        songInfo={songInfo}\r\n        setSongInfo={setSongInfo}\r\n        songs={songs}\r\n        setSongs={setSongs}\r\n        setCurrentSong={setCurrentSong}\r\n      />\r\n      <Library\r\n        songs={songs}\r\n        setSongs={setSongs}\r\n        setCurrentSong={setCurrentSong}\r\n        audioRef={audioRef}\r\n        isPlaying={isPlaying}\r\n        libraryStatus={libraryStatus}\r\n      />\r\n      <audio\r\n        onTimeUpdate={timeUpdateHandler}\r\n        onLoadedMetadata={timeUpdateHandler} //when info of song loads, load and display the currentTime and duration\r\n        ref={audioRef}\r\n        src={currentSong.audio}\r\n        onEnded={songEndHandler}\r\n      ></audio>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}